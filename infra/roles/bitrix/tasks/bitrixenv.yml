---
# TODO: привести к идемпотентности, добавить проверки
- name: Set timezone
  ansible.builtin.timezone:
    name: Europe/Moscow

- name: Install dependencies
  ansible.builtin.package:
    name:
      - wget
      - python3-pip
    state: present

- name: Install dependencies
  pip:
    name: pexpect>=3.3
    executable: pip3

- name: Set root password
  ansible.builtin.user:
    name: root
    generate_ssh_key: yes
    ssh_key_type: "ed25519"
    password: "{{ bx_root_password }}"

- name: yum clean all && yum update
  ansible.builtin.shell: |
    yum clean all 
    yum update -y
    
- name: Download bitrix-env.sh
  ansible.builtin.get_url:
    url: https://repo.bitrix.info/yum/bitrix-env.sh
    dest: /root/bitrix-env.sh
    mode: 0700

- name: First start bitrix-env.sh
  ansible.builtin.expect:
    command: /root/bitrix-env.sh
    responses:
      (.*)disable SELinux(.*): "Y"
  vars:
    ansible_python_interpreter: /usr/bin/python3
  register: result

# - name: Debug result
#   ansible.builtin.debug:
#     var: result

- name: Reboot server wait 30 sec
  ansible.builtin.reboot:
    reboot_timeout: 30000
  # when: "'Bitrix Environment bitrix-env has been installed successfully.' not in item"
  # loop: "{{ result.stdout_lines }}"

- name: Continue setup bitrix-env
  ansible.builtin.command:
    /root/bitrix-env.sh
  # when: "'Please reboot the system! (cmd: reboot)' in item"
  # loop: "{{ result.stdout_lines }}"
  # register: result_continue

- name: Set bitrix password
  ansible.builtin.user:
    name: bitrix
    password: "{{ bx_root_password }}"

# - name: Debug result
#   ansible.builtin.debug:
#     var: result_continue